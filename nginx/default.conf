# HTTP (keeps ACME reachable; you can add redirect later)
server {
  listen 80;
  listen [::]:80;
  server_name itknows.nl www.itknows.nl _;

  root /usr/share/nginx/html;
  index index.html;

  # API → backend
  location /health { proxy_pass http://backend:8080/health; proxy_set_header Host $host; }
  location /ask    { proxy_pass http://backend:8080/ask;    proxy_set_header Host $host; }
  location /upload {
    client_max_body_size 100m;
    proxy_pass http://backend:8080/upload;
    proxy_set_header Host $host;
  }

  # ACME webroot for Certbot
  location ^~ /.well-known/acme-challenge/ {
    alias /var/www/certbot/.well-known/acme-challenge/;
    default_type "text/plain";
    allow all;
  }

  location / { try_files $uri $uri/ /index.html; }
}

# HTTPS
server {
  listen 443 ssl;
  server_name itknows.nl www.itknows.nl;

  ssl_certificate     /etc/letsencrypt/live/itknows.nl/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/itknows.nl/privkey.pem;

  root /usr/share/nginx/html;
  index index.html;

  # API → backend (inherits global timeouts if you set them in nginx.conf)
  location /health { proxy_pass http://backend:8080/health; proxy_set_header Host $host; }
  location /ask    { proxy_pass http://backend:8080/ask;    proxy_set_header Host $host; }
  location /upload {
    client_max_body_size 100m;
    proxy_pass http://backend:8080/upload;
    proxy_set_header Host $host;
  }

  location / { try_files $uri $uri/ /index.html; }
}
